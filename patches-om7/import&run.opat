
(:patch
 (:om-version 2.1E-5)
 (:name "import&run")
 (:doc "")
 (:info
  (:created "2018/04/03 17:30:22")
  (:modified "2018/07/24 15:46:02"))
 (:window (:size (1148 654)) (:position (941 246)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:box
   (:library "om-xmm")
   (:reference (:symbol "IMPORT-JSON" "XMM"))
   (:type :function)
   (:group-id nil)
   (:name "import-json")
   (:x 113)
   (:y 324)
   (:w 97)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "PATH")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 0))
  (:box
   (:reference simple-base-string)
   (:type :value)
   (:group-id nil)
   (:name "value box")
   (:x 145)
   (:y 290)
   (:w 210)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "Users/best/Desktop/testexport.json")
   (:id 1))
  (:box
   (:reference file-chooser)
   (:type :function)
   (:group-id nil)
   (:name "file-chooser")
   (:x 436)
   (:y 30)
   (:w 100)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs)
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 2))
  (:box
   (:reference sound)
   (:type :object)
   (:group-id nil)
   (:name nil)
   (:x 418)
   (:y 61)
   (:w 147)
   (:h 48)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 10) (:style :italic)))
   (:name nil)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:group-id nil)
   (:lock :locked)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value :choose-file)
     (:reactive nil)))
   (:outputs (:output (:name "SELF") (:reactive nil)))
   (:window (:size (553 211)) (:position (21 92)))
   (:edition-params)
   (:value
    (:object
     (:class sound)
     (:slots
      ((:onset 0)
       (:duration 0)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:default-frame-type marker-frame)
       (:frames nil)
       (:buffer nil)
       (:n-samples 23378324)
       (:n-channels 2)
       (:sample-rate 44100)
       (:smpl-type :float)
       (:sample-size 24)))
     (:add-slots
      ((:markers nil)
       (:file-pathname
        (:pathname
         (:directory
          (:absolute "Users" "best" "SRC" "Project Alireza" "SF"))
         (:device :unspecific)
         (:host nil)
         (:name "zamyad_cello_seul")
         (:type "wav")))
       (:sample-rate 44100)
       (:n-channels 2)
       (:n-samples 23378324)
       (:gain 1.0)
       (:access-from-file nil)))))
   (:id 3))
  (:box
   (:library "om-iae")
   (:reference (:symbol "IAE" "IAE"))
   (:type :object)
   (:group-id nil)
   (:name nil)
   (:x 406)
   (:y 155)
   (:w 171)
   (:h 50)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 10) (:style :italic)))
   (:name nil)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:group-id nil)
   (:lock :locked)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "SOUNDS")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :key)
     (:name "PIPO-MODULE")
     (:value "basic")
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "SOUNDS") (:reactive nil))
    (:output (:name "pipo-module") (:reactive nil)))
   (:window (:size (262 149)) (:position (504 621)))
   (:edition-params)
   (:value
    (:object
     (:class (:symbol "IAE" "IAE"))
     (:slots
      ((:onset 0)
       (:duration 0)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:default-frame-type (:symbol "IAE-GRAIN" "IAE"))
       (:frames nil)
       (:sounds
        (:list
         (:object
          (:class sound)
          (:slots
           ((:onset 0)
            (:duration 0)
            (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
            (:default-frame-type marker-frame)
            (:frames nil)
            (:buffer nil)
            (:n-samples 23378324)
            (:n-channels 2)
            (:sample-rate 44100)
            (:smpl-type :float)
            (:sample-size 24)))
          (:add-slots
           ((:markers nil)
            (:file-pathname
             (:pathname
              (:directory
               (:absolute "Users" "best" "SRC" "Project Alireza" "SF"))
              (:device :unspecific)
              (:host nil)
              (:name "zamyad_cello_seul")
              (:type "wav")))
            (:sample-rate 44100)
            (:n-channels 2)
            (:n-samples 23378324)
            (:gain 1.0)
            (:access-from-file nil))))))))
     (:add-slots
      ((:channels 1)
       (:max-dur 10000)
       (:grains nil)
       (:markers nil)
       (:pipo-module "<mfcc,descr>")))))
   (:id 4))
  (:box
   (:reference simple-base-string)
   (:type :value)
   (:group-id nil)
   (:name "value box")
   (:x 498)
   (:y 126)
   (:w 99)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "<mfcc,descr>")
   (:id 5))
  (:box
   (:reference
    (:patch
     (:om-version 2.1E-5)
     (:name "analyse file")
     (:doc "")
     (:info (:created nil) (:modified nil))
     (:window (:size (459 567)) (:position (678 409)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:reference
        (:in (:type omin) (:index 1) (:name "IAE") (:doc "")))
       (:type :io)
       (:group-id nil)
       (:name "IAE")
       (:x 91)
       (:y 25)
       (:w 41)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:reference
        (:in (:type omin) (:index 2) (:name "model") (:doc "")))
       (:type :io)
       (:group-id nil)
       (:name "model")
       (:x 32)
       (:y 96)
       (:w 56)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:reference
        (:in (:type omin) (:index 3) (:name "(t1 t2)") (:doc "")))
       (:type :io)
       (:group-id nil)
       (:name "(t1 t2)")
       (:x 187)
       (:y 38)
       (:w 59)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:reference
        (:out (:type omout) (:name "out") (:index 1) (:doc "")))
       (:type :io)
       (:group-id nil)
       (:name "out")
       (:x 64)
       (:y 385)
       (:w 40)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 3))
      (:box
       (:reference (:symbol "GET-SOUND-DESCRIPTORS" "IAE"))
       (:type :function)
       (:group-id nil)
       (:name "get-sound-descriptors")
       (:x 85)
       (:y 175)
       (:w 186)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "SRC-INDEX")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "t1")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "t2")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4))
      (:box
       (:reference mat-trans)
       (:type :function)
       (:group-id nil)
       (:name "mat-trans")
       (:x 129)
       (:y 206)
       (:w 89)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "MATRIX")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5))
      (:box
       (:reference cdr)
       (:type :function)
       (:group-id nil)
       (:name "cdr")
       (:x 145)
       (:y 237)
       (:w 55)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "X")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6))
      (:box
       (:reference fixnum)
       (:type :value)
       (:group-id nil)
       (:name "value box")
       (:x 136)
       (:y 147)
       (:w 32)
       (:h 28)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 0)
       (:id 7))
      (:box
       (:reference fixnum)
       (:type :value)
       (:group-id nil)
       (:name "value box")
       (:x 92)
       (:y 296)
       (:w 32)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 0)
       (:id 8))
      (:box
       (:reference first)
       (:type :function)
       (:group-id nil)
       (:name "first")
       (:x 165)
       (:y 105)
       (:w 58)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 9))
      (:box
       (:reference second)
       (:type :function)
       (:group-id nil)
       (:name "second")
       (:x 208)
       (:y 128)
       (:w 77)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 10))
      (:box
       (:library "om-xmm")
       (:reference (:symbol "RUN-MODEL" "XMM"))
       (:type :function)
       (:group-id nil)
       (:name "run-model")
       (:x 43)
       (:y 328)
       (:w 92)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "DATA")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "reset")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 11)))
     (:connections
      (:connection
       (:from (:box 0 :out 0))
       (:to (:box 4 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 1 :out 0))
       (:to (:box 11 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 2 :out 0))
       (:to (:box 9 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 2 :out 0))
       (:to (:box 10 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 4 :out 0))
       (:to (:box 5 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 5 :out 0))
       (:to (:box 6 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 6 :out 0))
       (:to (:box 11 :in 1))
       (:attributes (:color nil :style nil :modif (0 -12/71))))
      (:connection
       (:from (:box 7 :out 0))
       (:to (:box 4 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 8 :out 0))
       (:to (:box 11 :in 2))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 9 :out 0))
       (:to (:box 4 :in 2))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 10 :out 0))
       (:to (:box 4 :in 3))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 11 :out 0))
       (:to (:box 3 :in 0))
       (:attributes (:color nil :style nil :modif nil))))))
   (:type :patch)
   (:group-id nil)
   (:name "analyse file")
   (:x 416)
   (:y 274)
   (:w 97)
   (:h 28)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:group-id nil)
   (:lock nil)
   (:lambda :lambda)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "IAE")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "model")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "(t1 t2)")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 6))
  (:box
   (:reference mapcar)
   (:type :function)
   (:group-id nil)
   (:name "mapcar")
   (:x 529)
   (:y 322)
   (:w 78)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "FUNCTION")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LIST")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 7))
  (:box
   (:reference sound-dur)
   (:type :function)
   (:group-id nil)
   (:name "sound-dur")
   (:x 602)
   (:y 139)
   (:w 92)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SOUND")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 8))
  (:box
   (:reference
    (:textfun
     (:om-version 2.1E-5)
     (:name "build frames (t1 t2)")
     (:doc "")
     (:info (:created nil) (:modified nil))
     (:window (:size (500 500)) (:position (475 359)))
     (:text
      (:list
       ";;; Edit a valid LAMBDA EXPRESSION"
       ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
       "(lambda (dur frame-size) "
       "  (loop for i from 0 to (1- (/ dur frame-size)) collect "
       "       (list (* i frame-size) (* (1+ i) frame-size))"
       "))"))))
   (:type :textfun)
   (:group-id nil)
   (:name "build frames (t1 t2)")
   (:x 617)
   (:y 258)
   (:w 137)
   (:h 28)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:group-id nil)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "DUR")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "FRAME-SIZE")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 9))
  (:box
   (:reference *)
   (:type :function)
   (:group-id nil)
   (:name "*")
   (:x 637)
   (:y 213)
   (:w 44)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "args")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "args")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 10))
  (:box
   (:reference fixnum)
   (:type :value)
   (:group-id nil)
   (:name "value box")
   (:x 648)
   (:y 177)
   (:w 43)
   (:h 28)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 1000)
   (:id 11))
  (:box
   (:reference fixnum)
   (:type :value)
   (:group-id nil)
   (:name "value box")
   (:x 699)
   (:y 224)
   (:w 37)
   (:h 28)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 200)
   (:id 12))
  (:box
   (:reference collection)
   (:type :object)
   (:group-id nil)
   (:name "...")
   (:x 457)
   (:y 383)
   (:w 145)
   (:h 54)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 10) (:style :italic)))
   (:name "...")
   (:display :text)
   (:showname nil)
   (:group-id nil)
   (:lock :locked)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "OBJ-LIST")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "OBJ-LIST") (:reactive nil)))
   (:window (:size (nil nil)) (:position (nil nil)))
   (:edition-params)
   (:value
    (:object
     (:class collection)
     (:slots
      ((:obj-list
        (:list
         "Z"
         "Z"
         "Z"
         "Z"
         "Z"
         "Z"
         "Z"
         "Z"
         "Z"
         "Z"
         "Z"
         "Z"
         "Z"
         "Z"
         "Z"
         "Z"
         "Z"
         "Z"
         "Z"
         "Z"
         "Z"
         "Z"
         "Z"
         "Z"
         "Z"
         "Z"
         "Z"
         "Z"
         "Z"
         "Z"
         "Z"
         "Z"
         "Z"
         "Z"
         "Z"
         "Z"
         "Z"
         "Z"
         "Z"
         "Z"
         "Z"
         "Z"
         "Z"
         "Z"
         "Z"
         "Z"
         "Z"
         "Z"
         "Z"
         "Z"
         "Z"
         "Z"
         "Z"
         "Z"
         "Z"
         "Z"
         "Z"
         "Z"
         "Z"
         "Z"
         "B"
         "Q"
         "Q"
         "A"
         "A"
         "A"
         "A"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "B"
         "B"
         "B"
         "B"
         "B"
         "B"
         "B"
         "B"
         "B"
         "B"
         "B"
         "B"
         "B"
         "B"
         "E"
         "E"
         "E"
         "E"
         "E"
         "E"
         "E"
         "E"
         "E"
         "E"
         "E"
         "E"
         "E"
         "E"
         "E"
         "F"
         "F"
         "F"
         "F"
         "F"
         "F"
         "F"
         "F"
         "F"
         "F"
         "F"
         "E"
         "E"
         "E"
         "E"
         "E"
         "E"
         "E"
         "E"
         "E"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "B"
         "B"
         "B"
         "B"
         "B"
         "B"
         "B"
         "B"
         "B"
         "B"
         "B"
         "B"
         "E"
         "E"
         "E"
         "E"
         "E"
         "E"
         "E"
         "E"
         "E"
         "E"
         "E"
         "E"
         "E"
         "E"
         "E"
         "F"
         "F"
         "F"
         "F"
         "F"
         "F"
         "F"
         "F"
         "F"
         "F"
         "F"
         "F"
         "F"
         "F"
         "F"
         "E"
         "E"
         "E"
         "E"
         "E"
         "E"
         "E"
         "E"
         "E"
         "E"
         "E"
         "C"
         "C"
         "C"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "F"
         "F"
         "F"
         "F"
         "F"
         "F"
         "F"
         "F"
         "F"
         "F"
         "F"
         "F"
         "F"
         "F"
         "F"
         "F"
         "F"
         "F"
         "F"
         "F"
         "F"
         "F"
         "E"
         "E"
         "E"
         "E"
         "E"
         "E"
         "E"
         "E"
         "E"
         "C"
         "Q"
         "Q"
         "A"
         "A"
         "O"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "B"
         "B"
         "B"
         "B"
         "B"
         "B"
         "B"
         "B"
         "B"
         "B"
         "B"
         "E"
         "E"
         "E"
         "E"
         "E"
         "E"
         "E"
         "E"
         "E"
         "E"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "P"
         "P"
         "P"
         "P"
         "P"
         "P"
         "P"
         "T"
         "T"
         "J"
         "Q"
         "Q"
         "Q"
         "C"
         "C"
         "C"
         "C"
         "K"
         "A"
         "A"
         "G"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "B"
         "B"
         "B"
         "B"
         "B"
         "B"
         "B"
         "B"
         "B"
         "B"
         "B"
         "B"
         "B"
         "B"
         "B"
         "E"
         "E"
         "E"
         "E"
         "E"
         "E"
         "E"
         "E"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "Q"
         "A"
         "A"
         "A"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "G"
         "G"
         "G"
         "G"
         "A"
         "A"
         "C"
         "C"
         "C"
         "C"
         "O"
         "G"
         "G"
         "G"
         "G"
         "G"
         "R"
         "G"
         "G"
         "A"
         "A"
         "A"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "B"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "R"
         "G"
         "G"
         "G"
         "G"
         "G"
         "A"
         "A"
         "A"
         "O"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "A"
         "A"
         "A"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "A"
         "A"
         "A"
         "R"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "G"
         "C"
         "C"
         "C"
         "I"
         "I"
         "I"
         "I"
         "I"
         "I"
         "I"
         "I"
         "I"
         "I"
         "I"
         "I"
         "I"
         "I"
         "I"
         "I"
         "I"
         "I"
         "I"
         "I"
         "I"
         "I"
         "I"
         "I"
         "G"
         "A"
         "A"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "G"
         "G"
         "G"
         "I"
         "I"
         "I"
         "I"
         "I"
         "I"
         "I"
         "I"
         "I"
         "I"
         "I"
         "I"
         "I"
         "I"
         "I"
         "I"
         "I"
         "I"
         "I"
         "I"
         "I"
         "I"
         "I"
         "I"
         "I"
         "I"
         "R"
         "R"
         "G"
         "A"
         "A"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "I"
         "I"
         "I"
         "I"
         "I"
         "I"
         "I"
         "I"
         "I"
         "I"
         "I"
         "I"
         "I"
         "I"
         "I"
         "I"
         "I"
         "I"
         "I"
         "I"
         "I"
         "I"
         "I"
         "I"
         "R"
         "R"
         "R"
         "R"
         "R"
         "A"
         "A"
         "A"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "A"
         "A"
         "A"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "A"
         "A"
         "A"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "R"
         "G"
         "G"
         "G"
         "G"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "G"
         "A"
         "A"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "T"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "A"
         "A"
         "K"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "A"
         "A"
         "A"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "A"
         "A"
         "G"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "G"
         "G"
         "G"
         "G"
         "G"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "K"
         "A"
         "A"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "R"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "R"
         "G"
         "G"
         "G"
         "G"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "L"
         "G"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "R"
         "C"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "R"
         "R"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "R"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "N"
         "M"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "G"
         "R"
         "R"
         "H"
         "H"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "O"
         "O"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "G"
         "G"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "R"
         "J"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "N"
         "N"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "N"
         "N"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "Z"
         "Z"
         "Z"
         "Z"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "J"
         "N"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "N"
         "N"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "G"
         "J"
         "T"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "N"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "E"
         "E"
         "E"
         "E"
         "E"
         "E"
         "E"
         "E"
         "E"
         "E"
         "E"
         "E"
         "E"
         "E"
         "E"
         "E"
         "E"
         "E"
         "E"
         "E"
         "E"
         "E"
         "E"
         "E"
         "E"
         "E"
         "E"
         "E"
         "K"
         "K"
         "K"
         "K"
         "K"
         "K"
         "L"
         "L"
         "L"
         "B"
         "K"
         "L"
         "L"
         "L"
         "L"
         "L"
         "L"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "L"
         "L"
         "L"
         "L"
         "L"
         "L"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "K"
         "K"
         "K"
         "K"
         "K"
         "K"
         "K"
         "K"
         "K"
         "K"
         "K"
         "K"
         "M"
         "J"
         "J"
         "G"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "L"
         "L"
         "L"
         "L"
         "L"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "K"
         "K"
         "K"
         "K"
         "K"
         "K"
         "L"
         "L"
         "L"
         "L"
         "L"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "L"
         "L"
         "L"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "L"
         "L"
         "L"
         "L"
         "L"
         "L"
         "K"
         "K"
         "K"
         "K"
         "K"
         "L"
         "L"
         "L"
         "L"
         "L"
         "L"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "L"
         "L"
         "L"
         "L"
         "K"
         "K"
         "K"
         "K"
         "K"
         "K"
         "K"
         "K"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "L"
         "L"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "L"
         "L"
         "L"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "K"
         "K"
         "K"
         "K"
         "K"
         "L"
         "L"
         "L"
         "L"
         "L"
         "L"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "L"
         "L"
         "L"
         "L"
         "L"
         "L"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "J"
         "L"
         "L"
         "L"
         "G"
         "J"
         "J"
         "G"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "G"
         "H"
         "H"
         "H"
         "H"
         "H"
         "J"
         "L"
         "L"
         "L"
         "L"
         "P"
         "P"
         "P"
         "P"
         "P"
         "P"
         "P"
         "P"
         "M"
         "M"
         "M"
         "M"
         "M"
         "A"
         "A"
         "A"
         "R"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "P"
         "P"
         "H"
         "H"
         "R"
         "R"
         "R"
         "R"
         "P"
         "P"
         "P"
         "P"
         "P"
         "P"
         "F"
         "M"
         "M"
         "R"
         "C"
         "Q"
         "Q"
         "Q"
         "Q"
         "Q"
         "Q"
         "L"
         "L"
         "L"
         "L"
         "L"
         "E"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "Z"
         "L"
         "L"
         "L"
         "L"
         "L"
         "L"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "L"
         "L"
         "L"
         "L"
         "L"
         "G"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "Z"
         "H"
         "L"
         "L"
         "L"
         "L"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "Z"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "K"
         "K"
         "K"
         "K"
         "K"
         "K"
         "K"
         "K"
         "K"
         "K"
         "K"
         "K"
         "K"
         "K"
         "K"
         "K"
         "K"
         "K"
         "K"
         "K"
         "L"
         "L"
         "L"
         "L"
         "L"
         "L"
         "L"
         "L"
         "L"
         "L"
         "K"
         "K"
         "K"
         "K"
         "K"
         "K"
         "K"
         "K"
         "K"
         "G"
         "K"
         "G"
         "G"
         "K"
         "K"
         "K"
         "K"
         "K"
         "K"
         "K"
         "K"
         "K"
         "K"
         "K"
         "K"
         "K"
         "K"
         "K"
         "K"
         "K"
         "K"
         "S"
         "S"
         "S"
         "S"
         "S"
         "S"
         "S"
         "S"
         "S"
         "S"
         "S"
         "S"
         "L"
         "L"
         "L"
         "L"
         "L"
         "L"
         "L"
         "L"
         "L"
         "L"
         "M"
         "M"
         "M"
         "M"
         "M"
         "M"
         "M"
         "M"
         "M"
         "M"
         "M"
         "M"
         "M"
         "M"
         "M"
         "M"
         "M"
         "M"
         "M"
         "M"
         "M"
         "M"
         "M"
         "M"
         "M"
         "M"
         "M"
         "M"
         "M"
         "M"
         "M"
         "M"
         "M"
         "N"
         "N"
         "N"
         "N"
         "N"
         "N"
         "N"
         "N"
         "N"
         "N"
         "N"
         "N"
         "N"
         "N"
         "N"
         "N"
         "N"
         "N"
         "N"
         "N"
         "N"
         "N"
         "N"
         "N"
         "N"
         "N"
         "N"
         "N"
         "N"
         "N"
         "N"
         "N"
         "N"
         "N"
         "O"
         "O"
         "O"
         "O"
         "O"
         "O"
         "O"
         "O"
         "O"
         "O"
         "O"
         "O"
         "O"
         "O"
         "O"
         "O"
         "O"
         "O"
         "O"
         "O"
         "O"
         "O"
         "O"
         "O"
         "O"
         "O"
         "O"
         "O"
         "O"
         "O"
         "J"
         "O"
         "O"
         "T"
         "O"
         "O"
         "O"
         "O"
         "O"
         "P"
         "P"
         "P"
         "P"
         "P"
         "P"
         "P"
         "P"
         "P"
         "P"
         "P"
         "P"
         "P"
         "P"
         "P"
         "P"
         "P"
         "P"
         "P"
         "P"
         "P"
         "P"
         "P"
         "P"
         "P"
         "P"
         "P"
         "P"
         "P"
         "P"
         "P"
         "P"
         "P"
         "P"
         "P"
         "P"
         "P"
         "P"
         "P"
         "P"
         "P"
         "P"
         "P"
         "P"
         "P"
         "P"
         "P"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "Z"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "Z"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "G"
         "C"
         "C"
         "G"
         "B"
         "T"
         "N"
         "N"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "C"
         "C"
         "C"
         "B"
         "B"
         "B"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "G"
         "G"
         "G"
         "G"
         "E"
         "T"
         "C"
         "C"
         "G"
         "B"
         "B"
         "N"
         "N"
         "T"
         "T"
         "C"
         "C"
         "G"
         "T"
         "T"
         "C"
         "C"
         "G"
         "C"
         "P"
         "T"
         "N"
         "N"
         "N"
         "G"
         "G"
         "G"
         "G"
         "G"
         "B"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "C"
         "C"
         "C"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "T"
         "O"
         "O"
         "O"
         "O"
         "O"
         "O"
         "O"
         "O"
         "O"
         "O"
         "O"
         "O"
         "O"
         "O"
         "O"
         "O"
         "O"
         "O"
         "O"
         "O"
         "O"
         "O"
         "O"
         "O"
         "O"
         "O"
         "O"
         "O"
         "O"
         "O"
         "O"
         "O"
         "O"
         "O"
         "P"
         "P"
         "P"
         "P"
         "P"
         "P"
         "P"
         "P"
         "P"
         "P"
         "P"
         "P"
         "P"
         "P"
         "P"
         "P"
         "P"
         "P"
         "P"
         "P"
         "P"
         "P"
         "P"
         "P"
         "P"
         "P"
         "P"
         "P"
         "M"
         "G"
         "G"
         "G"
         "H"
         "H"
         "M"
         "M"
         "M"
         "M"
         "M"
         "M"
         "M"
         "M"
         "M"
         "M"
         "M"
         "M"
         "M"
         "M"
         "M"
         "M"
         "M"
         "M"
         "M"
         "M"
         "M"
         "M"
         "M"
         "M"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "H"
         "G"
         "H"
         "T"
         "O"
         "O"
         "O"
         "O"
         "O"
         "O"
         "O"
         "O"
         "O"
         "O"
         "O"
         "O"
         "O"
         "O"
         "O"
         "O"
         "O"
         "O"
         "O"
         "O"
         "O"
         "O"
         "O"
         "O"
         "O"
         "O"
         "O"
         "O"
         "O"
         "F"
         "O"
         "O"
         "F"
         "C"
         "M"
         "O"
         "R"
         "C"
         "C"
         "C"
         "Q"
         "C"
         "C"
         "C"
         "Q"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "C"
         "R"
         "L"
         "L"
         "L"
         "L"
         "L"
         "L"
         "L"
         "L"
         "L"
         "L"
         "L"
         "L"
         "L"
         "L"
         "L"))))))
   (:id 13))
  (:comment
   (:x 5)
   (:y 283)
   (:w 128)
   (:h 42)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "use import-json to run pretrained models")
   (:id 14))
  (:comment
   (:x 699)
   (:y 200)
   (:w 123)
   (:h 24)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "Set frame size in ms ")
   (:id 15))
  (:comment
   (:x 479)
   (:y 213)
   (:w 114)
   (:h 63)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text
    "A label will be computed for each frame throughout the soundfile")
   (:id 16))
  (:box
   (:reference
    (:textfun
     (:om-version 2.1E-5)
     (:name "(t1 t2 label)")
     (:doc "")
     (:info (:created nil) (:modified nil))
     (:window (:size (500 500)) (:position (841 602)))
     (:text
      (:list
       ";;; Edit a valid LAMBDA EXPRESSION"
       ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
       "(lambda (list frame-size)"
       "  (let ((previous (car list))"
       "        (count 0)"
       "        (time 0))"
       "    (loop for label in list do "
       "          (if (string= previous label)"
       "              (incf count)"
       "            (progn "
       "              (print  (list time (+ time (* count frame-size)) previous ))"
       "              (incf time (* count frame-size ))"
       "              (setf count 1)"
       "              (setf previous label)"
       "              )))"
       "0))"))))
   (:type :textfun)
   (:group-id nil)
   (:name "(t1 t2 label)")
   (:x 535)
   (:y 499)
   (:w 103)
   (:h 28)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:group-id nil)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "LIST")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "FRAME-SIZE")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 17))
  (:comment
   (:x 324)
   (:y 395)
   (:w 126)
   (:h 44)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "list of predicted labels for each frame")
   (:id 18))
  (:comment
   (:x 407)
   (:y 504)
   (:w 120)
   (:h 20)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "formats the results")
   (:id 19))
  (:box
   (:library "om-xmm")
   (:reference (:symbol "XMM-MODEL" "XMM"))
   (:type :object)
   (:group-id nil)
   (:name nil)
   (:x 78)
   (:y 148)
   (:w 246)
   (:h 67)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font (:font (:face "Calibri") (:size 12) (:style :italic)))
   (:name nil)
   (:display :mini-view)
   (:showname nil)
   (:group-id nil)
   (:lock :locked)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "DATASET")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "DATASET") (:reactive nil)))
   (:window (:size (nil nil)) (:position (nil nil)))
   (:edition-params)
   (:value
    (:object
     (:class (:symbol "XMM-MODEL" "XMM"))
     (:slots ((:dataset nil)))
     (:add-slots
      ((:states 10)
       (:gaussians 1)
       (:regularization (:list 0.05 0.01))
       (:normalize-data nil)))))
   (:id 20))
  (:comment
   (:x 91)
   (:y 99)
   (:w 128)
   (:h 46)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "once imported, see the known labels in the mini-view")
   (:id 21)))
 (:connections
  (:connection
   (:from (:box 1 :out 0))
   (:to (:box 0 :in 1))
   (:attributes (:color nil :style nil :modif (0 -41/342))))
  (:connection
   (:from (:box 2 :out 0))
   (:to (:box 3 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 3 :out 0))
   (:to (:box 4 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 3 :out 0))
   (:to (:box 8 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 4 :out 0))
   (:to (:box 6 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 5 :out 0))
   (:to (:box 4 :in 2))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 6 :out 0))
   (:to (:box 7 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 7 :out 0))
   (:to (:box 13 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 8 :out 0))
   (:to (:box 10 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 9 :out 0))
   (:to (:box 7 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 10 :out 0))
   (:to (:box 9 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 11 :out 0))
   (:to (:box 10 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 12 :out 0))
   (:to (:box 9 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 12 :out 0))
   (:to (:box 17 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 13 :out 1))
   (:to (:box 17 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 20 :out 0))
   (:to (:box 0 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 20 :out 0))
   (:to (:box 6 :in 1))
   (:attributes (:color nil :style nil :modif nil)))))